;----------------------------------------------------------------
; 发情 测试用模板 所以会写很多没必要的东西
;----------------------------------------------------------------
@BUFF_MODEL_1001(buff_ID, method, chara_ID = 0)
#DIM buff_ID
#DIM chara_ID
#DIMS method

    ; 为什么不每个method都单独开@Function()，因为ID不好管理，如果哪天改BUFFID，每个function都要翻出来改，改漏也很难察觉
    SELECTCASE method
    ; 这里只写描述
	CASE "描述"
		VARSET RESULTS
		RESULTS:0 = {NAME:chara_ID}陷入发情！

    ; 静态数据配置
    ; 显示用的名字。如果想设计一个场景效果，让所有BUFF名和技能名都显示为不可名状的锟斤拷，可以 BUFF_NAME:buff_ID = 锟斤拷
    CASE "BUFF_NAME"
        VARSET RESULTS
        RESULTS = 发情
    ; 发情只能叠加1层
    CASE "BUFF_STACK_MAX"
        VARSET RESULT
        RESULT = 1
    ; 发情的持续时间无限
    CASE "BUFF_DURATION"
        VARSET RESULT
        RESULT = -1
    
    ; buff内的各种实际逻辑都写在下面
    CASE "添加"

    ; 实时检测
    CASE "迭代"
        ; 性欲为0时，移除自身
        IF BASE:(BUFF_TARGET:buff_ID):性欲 < 1
            CALL Remove_Buff(buff_ID)
        ENDIF

    CASE "移除"

    CASE "行动"

    ; 攻击和受击是同一个事件，哪怕被闪避了也会触发受击事件，当然也可以在触发事件之后进一步判断有没有受到伤害
    CASE "受击"

    CASE "受伤"

    CASE "死亡"

	CASEELSE
ENDSELECT
RETURN